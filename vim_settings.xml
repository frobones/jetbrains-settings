<application>
  <component name="VimEditorSettings">
    <editor />
  </component>
  <component name="VimHistorySettings">
    <history>
      <history-search>
        <entry>check_pin</entry>
        <entry>start</entry>
        <entry>killed</entry>
        <entry encoding="base64">XDx0ZWFyRG93blNlcnZpY2VcPg==</entry>
        <entry>spawnPr</entry>
        <entry>spawnProcess</entry>
      </history-search>
      <history-cmd />
      <history-expr />
      <history-input />
    </history>
  </component>
  <component name="VimKeySettings">
    <shortcut-conflicts>
      <shortcut-conflict owner="ide">
        <text>ctrl pressed B</text>
      </shortcut-conflict>
      <shortcut-conflict owner="ide">
        <text>ctrl pressed F</text>
      </shortcut-conflict>
      <shortcut-conflict owner="ide">
        <text>ctrl pressed C</text>
      </shortcut-conflict>
      <shortcut-conflict owner="ide">
        <text>ctrl pressed V</text>
      </shortcut-conflict>
      <shortcut-conflict owner="ide">
        <text>ctrl pressed S</text>
      </shortcut-conflict>
      <shortcut-conflict owner="ide">
        <text>ctrl pressed R</text>
      </shortcut-conflict>
      <shortcut-conflict owner="ide">
        <text>ctrl pressed X</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed H</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed N</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed D</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed A</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed OPEN_BRACKET</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed G</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed L</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed CLOSE_BRACKET</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed W</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed K</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed Y</text>
      </shortcut-conflict>
    </shortcut-conflicts>
  </component>
  <component name="VimMarksSettings">
    <globalmarks />
    <filemarks>
      <file name="$USER_HOME$/CLionProjects/prc-158-port/sources/wren-waveform-services/test/twt-tsm-pli-tester/CMakeLists.txt" timestamp="1595442922086">
        <mark key="[" line="73" column="47" />
      </file>
      <file name="$USER_HOME$/CLionProjects/prc-158-port/sources/openssl/crypto/x509/x509.h" timestamp="1597437890066" />
      <file name="$USER_HOME$/CLionProjects/prc-158-port/sources/wren-waveform-services/test/twt-nb-pli-tester/CMakeLists.txt" timestamp="1595442913765">
        <mark key="[" line="61" column="25" />
      </file>
      <file name="$USER_HOME$/CLionProjects/prc-158-port/sources/wren-waveform-services/src/twt-tsm-pli-translator/CMakeLists.txt" timestamp="1595442892221">
        <mark key="[" line="74" column="28" />
      </file>
      <file name="$USER_HOME$/CLionProjects/prc-158-port/sources/wren-waveform-services/test/twt-tsm-voice-translator/integration-test/CMakeLists.txt" timestamp="1595442935523">
        <mark key="[" line="50" column="26" />
      </file>
      <file name="$USER_HOME$/CLionProjects/prc-158-port/sources/wren-waveform-services/test/unit-tests/twt-otf-status-handler/CMakeLists.txt" timestamp="1595442977383">
        <mark key="[" line="69" column="32" />
      </file>
      <file name="$USER_HOME$/CLionProjects/prc-158-port/sources/openssl/crypto/pkcs12/p12_kiss.c" timestamp="1597358997607">
        <mark key="'" line="19" column="1" />
      </file>
      <file name="$USER_HOME$/CLionProjects/prc-158-port/sources/wren-waveform-services/src/twt-tsm-voice-translator/CMakeLists.txt" timestamp="1595442906328">
        <mark key="[" line="76" column="26" />
      </file>
      <file name="$USER_HOME$/CLionProjects/prc-158-port/sources/twtipcd/CMakeLists.txt" timestamp="1595465172885">
        <mark key="[" line="91" column="5" />
        <mark key="]" line="91" column="5" />
        <mark key="." line="91" column="5" />
        <mark key="^" line="91" column="40" />
      </file>
      <file name="$USER_HOME$/CLionProjects/prc-158-port/sources/twtipcd/doc/porting-guide.md" timestamp="1595462058032">
        <mark key="[" line="61" column="20" />
      </file>
      <file name="$USER_HOME$/CLionProjects/prc-158-port/sources/libwebsockets/lib/tls/mbedtls/wrapper/include/internal/ssl_types.h" timestamp="1597437617511" />
      <file name="$USER_HOME$/CLionProjects/prc-158-port/sources/nvppfs/src/ipc_monitor.cpp" timestamp="1596244531552">
        <mark key="'" line="96" column="42" />
        <mark key="[" line="91" column="10" />
        <mark key="]" line="63" column="17" />
        <mark key="." line="63" column="17" />
        <mark key="^" line="102" column="27" />
      </file>
      <file name="$USER_HOME$/CLionProjects/prc-158-port/sources/qnx-build-environment/qnx650/target/qnx6/usr/include/openssl/evp.h" timestamp="1597438457834" />
      <file name="$USER_HOME$/CLionProjects/prc-158-port/sources/service-tools/twt-certificates.cpp" timestamp="1597450795174">
        <mark key="'" line="265" column="35" />
        <mark key="[" line="0" column="0" />
        <mark key="]" line="0" column="0" />
        <mark key="." line="0" column="0" />
        <mark key="^" line="0" column="0" />
      </file>
      <file name="/Dummy.cpp" timestamp="1596846702516">
        <mark key="[" line="0" column="0" />
      </file>
      <file name="$USER_HOME$/CLionProjects/prc-158-port/sources/nvppfs/src/nvppfs.cpp" timestamp="1597445998586">
        <mark key="'" line="157" column="46" />
      </file>
      <file name="$USER_HOME$/CLionProjects/prc-158-port/sources/twtipcd/src/twt_ipcd_qnx_twtipcd.cpp" timestamp="1596237757676">
        <mark key="'" line="177" column="88" />
        <mark key="[" line="29" column="16" />
      </file>
      <file name="$USER_HOME$/CLionProjects/prc-158-port/sources/wren-waveform-services/src/twt-tsm-status-handler/CMakeLists.txt" timestamp="1595442899238">
        <mark key="[" line="68" column="29" />
      </file>
      <file name="$USER_HOME$/CLionProjects/prc-158-port/sources/twtipcd/test/CMakeLists.txt" timestamp="1595465215933">
        <mark key="[" line="14" column="4" />
        <mark key="]" line="14" column="4" />
        <mark key="." line="14" column="4" />
      </file>
    </filemarks>
    <jumps>
      <jump line="63" column="0" filename="$USER_HOME$/CLionProjects/prc-158-port/sources/nvppfs/src/qnx/main-qnx.cpp" />
      <jump line="209" column="8" filename="$USER_HOME$/CLionProjects/prc-158-port/sources/tww-iface-utils/moc-ethFrameIpcChanEP.cpp" />
      <jump line="355" column="15" filename="$USER_HOME$/CLionProjects/prc-158-port/sources/tww-iface/eud.cpp" />
      <jump line="330" column="0" filename="$USER_HOME$/CLionProjects/prc-158-port/sources/tww-iface/eud.cpp" />
      <jump line="307" column="4" filename="$USER_HOME$/CLionProjects/prc-158-port/sources/tww-iface/tww.cpp" />
      <jump line="13" column="47" filename="$USER_HOME$/CLionProjects/prc-158-port/sources/libtwtos/src/qnx/moc-DbgBase.c" />
      <jump line="19" column="18" filename="$USER_HOME$/CLionProjects/prc-158-port/sources/libbrn/libbrn.cpp" />
      <jump line="341" column="0" filename="$USER_HOME$/CLionProjects/prc-158-port/sources/tww-iface/tww.cpp" />
      <jump line="111" column="9" filename="$USER_HOME$/CLionProjects/prc-158-port/sources/tww-iface/tww.cpp" />
      <jump line="236" column="24" filename="$USER_HOME$/CLionProjects/prc-158-port/sources/tww-iface/tww.cpp" />
      <jump line="84" column="0" filename="$USER_HOME$/CLionProjects/prc-158-port/sources/tww-iface/HarrisIpcWrapper.cpp" />
      <jump line="147" column="0" filename="$USER_HOME$/CLionProjects/prc-158-port/sources/libtwtipc/src/twt_ipc.cpp" />
      <jump line="563" column="41" filename="$USER_HOME$/CLionProjects/prc-158-port/sources/libtwtipc/src/twt_ipc.cpp" />
      <jump line="544" column="0" filename="$USER_HOME$/CLionProjects/prc-158-port/sources/libbrn/libbrn.cpp" />
      <jump line="567" column="15" filename="$USER_HOME$/CLionProjects/prc-158-port/sources/libbrn/libbrn.cpp" />
      <jump line="463" column="4" filename="$USER_HOME$/CLionProjects/prc-158-port/sources/libbrn/libbrn.cpp" />
      <jump line="438" column="0" filename="$USER_HOME$/CLionProjects/prc-158-port/sources/libbrn/libbrn.cpp" />
      <jump line="538" column="77" filename="$USER_HOME$/CLionProjects/prc-158-port/sources/libbrn/libbrn.cpp" />
      <jump line="593" column="32" filename="$USER_HOME$/CLionProjects/prc-158-port/sources/libtwtipc/src/twt_ipc.cpp" />
      <jump line="436" column="23" filename="$USER_HOME$/CLionProjects/prc-158-port/sources/libbrn/libbrn.cpp" />
      <jump line="58" column="33" filename="$USER_HOME$/CLionProjects/prc-158-port/sources/hiawatha/src/hiawatha.c" />
      <jump line="24" column="50" filename="$USER_HOME$/CLionProjects/prc-158-port/sources/nvppfs/src/qnx/ramdisk/c_mount.cpp" />
      <jump line="232" column="0" filename="$USER_HOME$/CLionProjects/prc-158-port/sources/libbrn/libbrn.cpp" />
      <jump line="130" column="19" filename="$USER_HOME$/CLionProjects/prc-158-port/sources/libbrn/libbrn.cpp" />
      <jump line="61" column="30" filename="$USER_HOME$/CLionProjects/prc-158-port/sources/twtipcd/src/twt_ipcd_linux_twtipcd.cpp" />
      <jump line="58" column="67" filename="$USER_HOME$/CLionProjects/prc-158-port/sources/libtwtipc/src/twt_ipc.cpp" />
      <jump line="75" column="3" filename="$USER_HOME$/CLionProjects/prc-158-port/sources/twtipcd/src/twt_ipcd_ipcd.cpp" />
      <jump line="504" column="46" filename="$USER_HOME$/CLionProjects/prc-158-port/sources/libtwtipc/src/twt_ipc_socket_ops.cpp" />
      <jump line="439" column="28" filename="$USER_HOME$/CLionProjects/prc-158-port/sources/libtwtipc/src/twt_ipc_socket_ops.cpp" />
      <jump line="10" column="16" filename="$USER_HOME$/CLionProjects/prc-158-port/sources/libbrn/libbrn.cpp" />
      <jump line="35" column="37" filename="$USER_HOME$/CLionProjects/prc-158-port/sources/twtipcd/test/twtipcd-unit-tests.cpp" />
      <jump line="54" column="17" filename="$USER_HOME$/CLionProjects/prc-158-port/sources/libbrn/libbrn.cpp" />
      <jump line="40" column="0" filename="$USER_HOME$/CLionProjects/prc-158-port/sources/twtipcd/test/twtipcd-unit-tests.cpp" />
      <jump line="20" column="16" filename="$USER_HOME$/CLionProjects/prc-158-port/sources/hiawatha/src/cgi.c" />
      <jump line="177" column="88" filename="$USER_HOME$/CLionProjects/prc-158-port/sources/twtipcd/src/twt_ipcd_qnx_twtipcd.cpp" />
      <jump line="93" column="42" filename="$USER_HOME$/CLionProjects/prc-158-port/sources/nvppfs/src/ipc_monitor.cpp" />
      <jump line="21" column="24" filename="$USER_HOME$/CLionProjects/prc-158-port/sources/service-tools/twt-certificates.cpp" />
      <jump line="19" column="1" filename="$USER_HOME$/CLionProjects/prc-158-port/sources/openssl/crypto/pkcs12/p12_kiss.c" />
      <jump line="157" column="46" filename="$USER_HOME$/CLionProjects/prc-158-port/sources/nvppfs/src/nvppfs.cpp" />
      <jump line="257" column="44" filename="$USER_HOME$/CLionProjects/prc-158-port/sources/service-tools/twt-certificates.cpp" />
      <jump line="265" column="35" filename="$USER_HOME$/CLionProjects/prc-158-port/sources/service-tools/twt-certificates.cpp" />
    </jumps>
  </component>
  <component name="VimRegisterSettings">
    <registers>
      <register name="&quot;" type="2">
        <text encoding="base64"></text>
      </register>
      <register name="-" type="4">
        <text>;</text>
      </register>
      <register name="/" type="4">
        <text>spawnProcess</text>
      </register>
      <register name="0" type="2">
        <text encoding="base64">ICAgICAgICBmcHJpbnRmKHN0ZGVyciwgIkVycm9yIHJlYWRpbmcgUEVNIGZpbGVcbiIpOwo=</text>
      </register>
      <register name="1" type="2">
        <text encoding="base64"></text>
      </register>
      <register name="2" type="2">
        <text encoding="base64">Cg==</text>
      </register>
      <register name="3" type="2">
        <text encoding="base64">aW50IHJlc3BvbnNlX2NvZGUgPSA0MDQ7Cg==</text>
      </register>
      <register name="4" type="2">
        <text encoding="base64">aW50IGV4aXRfc3RhdHVzID0gRVhJVF9TVUNDRVNTOwo=</text>
      </register>
      <register name="5" type="2">
        <text encoding="base64">Cg==</text>
      </register>
      <register name="6" type="2">
        <text encoding="base64">c3RkOjpzdHJpbmcgY29udGVudF90eXBlKCJ0ZXh0L2h0bWwiKTsK</text>
      </register>
      <register name="7" type="2">
        <text encoding="base64">Cg==</text>
      </register>
      <register name="8" type="2">
        <text encoding="base64">fQo=</text>
      </register>
      <register name="9" type="2">
        <text encoding="base64">ICAgIHJldHVybiBpc19SU0EyMDQ4KCkgJiYgaXNfc2hhMjU2V2l0aFJTQUVuY3J5cHRpb24oKTsK</text>
      </register>
    </registers>
  </component>
  <component name="VimSearchSettings">
    <search>
      <last-search>spawnProcess</last-search>
      <last-offset />
      <last-pattern>spawnProcess</last-pattern>
      <last-dir>1</last-dir>
      <show-last>false</show-last>
    </search>
  </component>
  <component name="VimSettings">
    <state version="6" enabled="true" />
    <notifications>
      <idea-join enabled="false" />
      <idea-put enabled="false" />
    </notifications>
  </component>
</application>